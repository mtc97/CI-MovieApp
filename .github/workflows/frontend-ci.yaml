name: Frontend Continous Integration

# Runs on pull and manually form github
on:
  pull_request:
    branches: 
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

env:
  REACT_APP__MOVIE_API_URL: http://localhost:5000

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run Linter
        run: |
          cd starter/frontend
          npm ci
          npm run lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'      
      
      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run Tests
        run: |
          cd starter/frontend
          npm ci
          npm test

  docker-build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: ${{ success() }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build Docker Image
        run: |
          cd starter/frontend
          docker build --build-arg=REACT_APP_MOVIE_API_URL=${{ env.REACT_APP__MOVIE_API_URL }} --tag=mp-frontend:latest .
          docker run --name mp-frontend -p 3000:3000 -d mp-frontend